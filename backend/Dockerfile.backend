# --- START OF REFACTORED FILE backend/Dockerfile.backend ---

# Use an official Python runtime as a parent image
FROM python:3.11-slim

# Set environment variables to prevent buffering and write .pyc files
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Set the working directory in the container
WORKDIR /app

# --- PLAYWRIGHT ENHANCEMENT: Install Playwright's system dependencies ---
# These are necessary for the browsers to run correctly in a headless Linux environment.
RUN apt-get update && \
    apt-get install -y \
    build-essential \
    libglib2.0-0 \
    libnss3 \
    libnspr4 \
    libdbus-1-3 \
    libatk1.0-0 \
    libatk-bridge2.0-0 \
    libcups2 \
    libdrm2 \
    libxkbcommon0 \
    libxcomposite1 \
    libxdamage1 \
    libxfixes3 \
    libxrandr2 \
    libgbm1 \
    libpango-1.0-0 \
    libcairo2 \
    libasound2 \
    libatspi2.0-0 \
    libx11-xcb1 \
    libxcb-dri3-0 \
    && apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Copy the requirements file into the container
COPY requirements.txt .

# Install the Python dependencies from requirements.txt
RUN pip install --no-cache-dir -r requirements.txt

# --- PLAYWRIGHT ENHANCEMENT: Install the browser binaries ---
# This command uses the playwright CLI to download the recommended browser (Chromium)
# into the Docker image itself. This is the correct and most reliable way to use Playwright in Docker.
RUN playwright install --with-deps chromium

# Copy the rest of the backend application code into the container
COPY . .

# Expose the port the app runs on
EXPOSE 8000

# --- Default Command ---
# This remains the same.
CMD ["gunicorn", "-w", "4", "-k", "uvicorn.workers.UvicornWorker", "backend.server:app", "--bind", "0.0.0.0:8000"]

# --- FOR THE CELERY WORKER IN RENDER ---
# This reminder also remains the same.
# Start Command: celery -A backend.celery_app worker --loglevel=info

# --- END OF REFACTORED FILE backend/Dockerfile.backend ---